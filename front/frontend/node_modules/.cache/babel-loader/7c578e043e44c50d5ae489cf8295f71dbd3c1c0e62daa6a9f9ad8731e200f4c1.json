{"ast":null,"code":"import api from './api';\nexport const getalbumData = async () => {\n  const response = await api.get('/album');\n  return response.data;\n};\nexport const updateAlbum = async (albumData, token) => {\n  const response = await fetch(`http://localhost:8080/albums/${albumData.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}` // Add the token here\n    },\n    body: JSON.stringify(albumData)\n  });\n  if (!response.ok) throw new Error('Failed to update album');\n  return response.json();\n};\nexport const createAlbum = async (albumData, token) => {\n  try {\n    const response = await fetch('http://localhost:8080/album', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}` // Add the token here\n      },\n      body: JSON.stringify(albumData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create album');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error creating album:', error);\n    throw error;\n  }\n};\nexport const deleteAlbum = async (id, token) => {\n  try {\n    const response = await fetch(`http://localhost:8080/albums/${id}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      const errorDetails = await response.text();\n      console.error('Error response from server:', errorDetails);\n      throw new Error(`Failed to delete album. Server responded with: ${response.status}`);\n    }\n  } catch (error) {\n    console.error('Error deleting album:', error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getalbumData","response","get","data","updateAlbum","albumData","token","fetch","id","method","headers","Authorization","body","JSON","stringify","ok","Error","json","createAlbum","error","console","deleteAlbum","errorDetails","text","status","message"],"sources":["C:/School/jaar3/Programming/project/Frontend/frontend/src/services/albumService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const getalbumData = async () => {\r\n  const response = await api.get('/album'); \r\n  return response.data;\r\n};\r\n\r\n\r\nexport const updateAlbum = async (albumData, token) => {\r\n  const response = await fetch(`http://localhost:8080/albums/${albumData.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`, // Add the token here\r\n    },\r\n    body: JSON.stringify(albumData),\r\n  });\r\n  if (!response.ok) throw new Error('Failed to update album');\r\n  return response.json();\r\n};\r\n\r\nexport const createAlbum = async (albumData, token) => {\r\n  try {\r\n    const response = await fetch('http://localhost:8080/album', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`, // Add the token here\r\n      },\r\n      body: JSON.stringify(albumData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to create album');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error creating album:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nexport const deleteAlbum = async (id, token) => {\r\n  try {\r\n      const response = await fetch(`http://localhost:8080/albums/${id}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n              Authorization: `Bearer ${token}`,\r\n          },\r\n      });\r\n\r\n      if (!response.ok) {\r\n          const errorDetails = await response.text();\r\n          console.error('Error response from server:', errorDetails);\r\n          throw new Error(`Failed to delete album. Server responded with: ${response.status}`);\r\n      }\r\n  } catch (error) {\r\n      console.error('Error deleting album:', error.message);\r\n      throw error;\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,QAAQ,CAAC;EACxC,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAGD,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,SAAS,EAAEC,KAAK,KAAK;EACrD,MAAML,QAAQ,GAAG,MAAMM,KAAK,CAAC,gCAAgCF,SAAS,CAACG,EAAE,EAAE,EAAE;IAC3EC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAE;IACpC,CAAC;IACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,SAAS;EAChC,CAAC,CAAC;EACF,IAAI,CAACJ,QAAQ,CAACc,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3D,OAAOf,QAAQ,CAACgB,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOb,SAAS,EAAEC,KAAK,KAAK;EACrD,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMM,KAAK,CAAC,6BAA6B,EAAE;MAC1DE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAE;MACpC,CAAC;MACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,SAAS;IAChC,CAAC,CAAC;IAEF,IAAI,CAACJ,QAAQ,CAACc,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,OAAO,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAKD,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAOb,EAAE,EAAEF,KAAK,KAAK;EAC9C,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMM,KAAK,CAAC,gCAAgCC,EAAE,EAAE,EAAE;MAC/DC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUL,KAAK;MAClC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACL,QAAQ,CAACc,EAAE,EAAE;MACd,MAAMO,YAAY,GAAG,MAAMrB,QAAQ,CAACsB,IAAI,CAAC,CAAC;MAC1CH,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEG,YAAY,CAAC;MAC1D,MAAM,IAAIN,KAAK,CAAC,kDAAkDf,QAAQ,CAACuB,MAAM,EAAE,CAAC;IACxF;EACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACM,OAAO,CAAC;IACrD,MAAMN,KAAK;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}