{"ast":null,"code":"var _jsxFileName = \"C:\\\\School\\\\jaar3\\\\Programming\\\\project\\\\Frontend\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getalbumData, createAlbum } from '../services/albumService';\nimport { getwinkelData } from '../services/winkelService';\nimport { getartiestData } from '../services/artiestService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [albums, setAlbums] = useState([]);\n  const [artists, setArtists] = useState([]);\n  const [winkels, setWinkels] = useState([]);\n  const [newAlbum, setNewAlbum] = useState({\n    artiestId: '',\n    albumName: '',\n    releaseDate: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const albumdata = await getalbumData();\n        setAlbums(albumdata);\n        const artistdata = await getartiestData();\n        setArtists(artistdata);\n        const winkeldata = await getwinkelData();\n        setWinkels(winkeldata);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleCreateAlbum = async e => {\n    e.preventDefault();\n    try {\n      const createdAlbum = await createAlbum(newAlbum, token); // Pass the token here\n      setAlbums(prev => [...prev, createdAlbum]); // Add the new album to the list\n      setNewAlbum({\n        artiestId: '',\n        albumName: '',\n        releaseDate: ''\n      }); // Reset the form\n    } catch (error) {\n      console.error('Error creating album:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: albums.map(album => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: album.albumName\n        }, album.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateAlbum,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Artist ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newAlbum.artiestId,\n            onChange: e => setNewAlbum({\n              ...newAlbum,\n              artiestId: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Album Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newAlbum.albumName,\n            onChange: e => setNewAlbum({\n              ...newAlbum,\n              albumName: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newAlbum.releaseDate,\n            onChange: e => setNewAlbum({\n              ...newAlbum,\n              releaseDate: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"A6b/y3xa0K21T4jOwwIM3jHEC0k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","getalbumData","createAlbum","getwinkelData","getartiestData","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","albums","setAlbums","artists","setArtists","winkels","setWinkels","newAlbum","setNewAlbum","artiestId","albumName","releaseDate","fetchData","albumdata","artistdata","winkeldata","error","console","handleCreateAlbum","e","preventDefault","createdAlbum","token","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","map","album","id","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/School/jaar3/Programming/project/Frontend/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getalbumData, createAlbum } from '../services/albumService';\r\nimport { getwinkelData } from '../services/winkelService';\r\nimport { getartiestData } from '../services/artiestService';\r\n\r\nconst Dashboard = () => {\r\n  const [albums, setAlbums] = useState([]);\r\n  const [artists, setArtists] = useState([]);\r\n  const [winkels, setWinkels] = useState([]);\r\n  const [newAlbum, setNewAlbum] = useState({ artiestId: '', albumName: '', releaseDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const albumdata = await getalbumData();\r\n        setAlbums(albumdata);\r\n        const artistdata = await getartiestData();\r\n        setArtists(artistdata);\r\n        const winkeldata = await getwinkelData();\r\n        setWinkels(winkeldata);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleCreateAlbum = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const createdAlbum = await createAlbum(newAlbum, token); // Pass the token here\r\n      setAlbums((prev) => [...prev, createdAlbum]); // Add the new album to the list\r\n      setNewAlbum({ artiestId: '', albumName: '', releaseDate: '' }); // Reset the form\r\n    } catch (error) {\r\n      console.error('Error creating album:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Dashboard</h1>\r\n        <h2>Albums</h2>\r\n        <ul>\r\n          {albums.map((album) => (\r\n            <li key={album.id}>{album.albumName}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Create Album</h2>\r\n        <form onSubmit={handleCreateAlbum}>\r\n          <div>\r\n            <label>Artist ID:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newAlbum.artiestId}\r\n              onChange={(e) => setNewAlbum({ ...newAlbum, artiestId: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Album Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newAlbum.albumName}\r\n              onChange={(e) => setNewAlbum({ ...newAlbum, albumName: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Release Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              value={newAlbum.releaseDate}\r\n              onChange={(e) => setNewAlbum({ ...newAlbum, releaseDate: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Create Album</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}