{"ast":null,"code":"var _jsxFileName = \"C:\\\\School\\\\jaar3\\\\Programming\\\\project\\\\Frontend\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport Dashboard from './pages/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userToken, setUserToken] = useState(null);\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"390971080892-aq334h72jejri8gl34jt6qaalrr9497i.apps.googleusercontent.com\",\n    children: !userToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: credentialResponse => {\n          setUserToken(credentialResponse.credential); // Save the JWT\n        },\n        onError: () => {\n          console.error('Login Failed');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n      token: userToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8dLIubW07P4Pd8uVeYlHAlc5acQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","GoogleLogin","Dashboard","jsxDEV","_jsxDEV","App","_s","userToken","setUserToken","clientId","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","credentialResponse","credential","onError","console","error","token","_c","$RefreshReg$"],"sources":["C:/School/jaar3/Programming/project/Frontend/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\nimport Dashboard from './pages/Dashboard';\r\n\r\nconst App = () => {\r\n  const [userToken, setUserToken] = useState(null);\r\n\r\n  return (\r\n    <GoogleOAuthProvider clientId=\"390971080892-aq334h72jejri8gl34jt6qaalrr9497i.apps.googleusercontent.com\">\r\n      {!userToken ? (\r\n        <div>\r\n          <h1>Login</h1>\r\n          <GoogleLogin\r\n            onSuccess={(credentialResponse) => {\r\n              setUserToken(credentialResponse.credential); // Save the JWT\r\n            }}\r\n            onError={() => {\r\n              console.error('Login Failed');\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Dashboard token={userToken} />\r\n      )}\r\n    </GoogleOAuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,qBAAqB;AACtE,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhD,oBACEK,OAAA,CAACJ,mBAAmB;IAACS,QAAQ,EAAC,0EAA0E;IAAAC,QAAA,EACrG,CAACH,SAAS,gBACTH,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAAM,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdV,OAAA,CAACH,WAAW;QACVc,SAAS,EAAGC,kBAAkB,IAAK;UACjCR,YAAY,CAACQ,kBAAkB,CAACC,UAAU,CAAC,CAAC,CAAC;QAC/C,CAAE;QACFC,OAAO,EAAEA,CAAA,KAAM;UACbC,OAAO,CAACC,KAAK,CAAC,cAAc,CAAC;QAC/B;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENV,OAAA,CAACF,SAAS;MAACmB,KAAK,EAAEd;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC/B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAE1B,CAAC;AAACR,EAAA,CAtBID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}